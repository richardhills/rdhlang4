# Generated from lang.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\65")
        buf.write("\u0181\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3")
        buf.write("\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7")
        buf.write("\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r")
        buf.write("\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23")
        buf.write("\3\23\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27")
        buf.write("\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37")
        buf.write("\3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"")
        buf.write("\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3$\3")
        buf.write("$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'")
        buf.write("\3(\3(\3(\3(\3(\3(\3)\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3")
        buf.write("+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3")
        buf.write("-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3\60")
        buf.write("\3\60\3\60\3\60\3\60\3\61\3\61\7\61\u0141\n\61\f\61\16")
        buf.write("\61\u0144\13\61\3\62\3\62\3\62\7\62\u0149\n\62\f\62\16")
        buf.write("\62\u014c\13\62\3\62\3\62\3\63\3\63\3\63\5\63\u0153\n")
        buf.write("\63\3\64\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\66\3\66")
        buf.write("\3\67\3\67\3\67\6\67\u0162\n\67\r\67\16\67\u0163\5\67")
        buf.write("\u0166\n\67\3\67\5\67\u0169\n\67\38\38\38\78\u016e\n8")
        buf.write("\f8\168\u0171\138\58\u0173\n8\39\39\59\u0177\n9\39\39")
        buf.write("\3:\6:\u017c\n:\r:\16:\u017d\3:\3:\2\2;\3\3\5\4\7\5\t")
        buf.write("\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60")
        buf.write("_\61a\62c\63e\2g\2i\2k\2m\64o\2q\2s\65\3\2\f\5\2C\\aa")
        buf.write("c|\6\2\62;C\\aac|\n\2$$\61\61^^ddhhppttvv\5\2\62;CHch")
        buf.write("\5\2\2!$$^^\3\2\62;\3\2\63;\4\2GGgg\4\2--//\5\2\13\f\17")
        buf.write("\17\"\"\2\u0185\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2")
        buf.write("\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21")
        buf.write("\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3")
        buf.write("\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2")
        buf.write("\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2")
        buf.write("\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2")
        buf.write("\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2")
        buf.write("\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3")
        buf.write("\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q")
        buf.write("\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2")
        buf.write("[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2")
        buf.write("\2m\3\2\2\2\2s\3\2\2\2\3u\3\2\2\2\5w\3\2\2\2\7y\3\2\2")
        buf.write("\2\t\u0080\3\2\2\2\13\u0088\3\2\2\2\r\u008f\3\2\2\2\17")
        buf.write("\u0091\3\2\2\2\21\u0093\3\2\2\2\23\u0095\3\2\2\2\25\u0097")
        buf.write("\3\2\2\2\27\u0099\3\2\2\2\31\u009b\3\2\2\2\33\u009d\3")
        buf.write("\2\2\2\35\u009f\3\2\2\2\37\u00a1\3\2\2\2!\u00a3\3\2\2")
        buf.write("\2#\u00a5\3\2\2\2%\u00a7\3\2\2\2\'\u00a9\3\2\2\2)\u00ab")
        buf.write("\3\2\2\2+\u00ae\3\2\2\2-\u00b1\3\2\2\2/\u00b3\3\2\2\2")
        buf.write("\61\u00b5\3\2\2\2\63\u00b8\3\2\2\2\65\u00bb\3\2\2\2\67")
        buf.write("\u00c0\3\2\2\29\u00c6\3\2\2\2;\u00cb\3\2\2\2=\u00d0\3")
        buf.write("\2\2\2?\u00d4\3\2\2\2A\u00dc\3\2\2\2C\u00e3\3\2\2\2E\u00ec")
        buf.write("\3\2\2\2G\u00ef\3\2\2\2I\u00f6\3\2\2\2K\u00fb\3\2\2\2")
        buf.write("M\u0101\3\2\2\2O\u0105\3\2\2\2Q\u010b\3\2\2\2S\u010e\3")
        buf.write("\2\2\2U\u0113\3\2\2\2W\u011c\3\2\2\2Y\u0124\3\2\2\2[\u012b")
        buf.write("\3\2\2\2]\u0132\3\2\2\2_\u0139\3\2\2\2a\u013e\3\2\2\2")
        buf.write("c\u0145\3\2\2\2e\u014f\3\2\2\2g\u0154\3\2\2\2i\u015a\3")
        buf.write("\2\2\2k\u015c\3\2\2\2m\u015e\3\2\2\2o\u0172\3\2\2\2q\u0174")
        buf.write("\3\2\2\2s\u017b\3\2\2\2uv\7.\2\2v\4\3\2\2\2wx\7=\2\2x")
        buf.write("\6\3\2\2\2yz\7u\2\2z{\7v\2\2{|\7c\2\2|}\7v\2\2}~\7k\2")
        buf.write("\2~\177\7e\2\2\177\b\3\2\2\2\u0080\u0081\7v\2\2\u0081")
        buf.write("\u0082\7{\2\2\u0082\u0083\7r\2\2\u0083\u0084\7g\2\2\u0084")
        buf.write("\u0085\7f\2\2\u0085\u0086\7g\2\2\u0086\u0087\7h\2\2\u0087")
        buf.write("\n\3\2\2\2\u0088\u0089\7k\2\2\u0089\u008a\7o\2\2\u008a")
        buf.write("\u008b\7r\2\2\u008b\u008c\7q\2\2\u008c\u008d\7t\2\2\u008d")
        buf.write("\u008e\7v\2\2\u008e\f\3\2\2\2\u008f\u0090\7?\2\2\u0090")
        buf.write("\16\3\2\2\2\u0091\u0092\7}\2\2\u0092\20\3\2\2\2\u0093")
        buf.write("\u0094\7\177\2\2\u0094\22\3\2\2\2\u0095\u0096\7<\2\2\u0096")
        buf.write("\24\3\2\2\2\u0097\u0098\7]\2\2\u0098\26\3\2\2\2\u0099")
        buf.write("\u009a\7_\2\2\u009a\30\3\2\2\2\u009b\u009c\7\60\2\2\u009c")
        buf.write("\32\3\2\2\2\u009d\u009e\7*\2\2\u009e\34\3\2\2\2\u009f")
        buf.write("\u00a0\7+\2\2\u00a0\36\3\2\2\2\u00a1\u00a2\7-\2\2\u00a2")
        buf.write(" \3\2\2\2\u00a3\u00a4\7/\2\2\u00a4\"\3\2\2\2\u00a5\u00a6")
        buf.write("\7,\2\2\u00a6$\3\2\2\2\u00a7\u00a8\7\61\2\2\u00a8&\3\2")
        buf.write("\2\2\u00a9\u00aa\7\'\2\2\u00aa(\3\2\2\2\u00ab\u00ac\7")
        buf.write("@\2\2\u00ac\u00ad\7?\2\2\u00ad*\3\2\2\2\u00ae\u00af\7")
        buf.write(">\2\2\u00af\u00b0\7?\2\2\u00b0,\3\2\2\2\u00b1\u00b2\7")
        buf.write("@\2\2\u00b2.\3\2\2\2\u00b3\u00b4\7>\2\2\u00b4\60\3\2\2")
        buf.write("\2\u00b5\u00b6\7?\2\2\u00b6\u00b7\7?\2\2\u00b7\62\3\2")
        buf.write("\2\2\u00b8\u00b9\7#\2\2\u00b9\u00ba\7?\2\2\u00ba\64\3")
        buf.write("\2\2\2\u00bb\u00bc\7v\2\2\u00bc\u00bd\7t\2\2\u00bd\u00be")
        buf.write("\7w\2\2\u00be\u00bf\7g\2\2\u00bf\66\3\2\2\2\u00c0\u00c1")
        buf.write("\7h\2\2\u00c1\u00c2\7c\2\2\u00c2\u00c3\7n\2\2\u00c3\u00c4")
        buf.write("\7u\2\2\u00c4\u00c5\7g\2\2\u00c58\3\2\2\2\u00c6\u00c7")
        buf.write("\7p\2\2\u00c7\u00c8\7w\2\2\u00c8\u00c9\7n\2\2\u00c9\u00ca")
        buf.write("\7n\2\2\u00ca:\3\2\2\2\u00cb\u00cc\7X\2\2\u00cc\u00cd")
        buf.write("\7q\2\2\u00cd\u00ce\7k\2\2\u00ce\u00cf\7f\2\2\u00cf<\3")
        buf.write("\2\2\2\u00d0\u00d1\7x\2\2\u00d1\u00d2\7c\2\2\u00d2\u00d3")
        buf.write("\7t\2\2\u00d3>\3\2\2\2\u00d4\u00d5\7K\2\2\u00d5\u00d6")
        buf.write("\7p\2\2\u00d6\u00d7\7v\2\2\u00d7\u00d8\7g\2\2\u00d8\u00d9")
        buf.write("\7i\2\2\u00d9\u00da\7g\2\2\u00da\u00db\7t\2\2\u00db@\3")
        buf.write("\2\2\2\u00dc\u00dd\7U\2\2\u00dd\u00de\7v\2\2\u00de\u00df")
        buf.write("\7t\2\2\u00df\u00e0\7k\2\2\u00e0\u00e1\7p\2\2\u00e1\u00e2")
        buf.write("\7i\2\2\u00e2B\3\2\2\2\u00e3\u00e4\7H\2\2\u00e4\u00e5")
        buf.write("\7w\2\2\u00e5\u00e6\7p\2\2\u00e6\u00e7\7e\2\2\u00e7\u00e8")
        buf.write("\7v\2\2\u00e8\u00e9\7k\2\2\u00e9\u00ea\7q\2\2\u00ea\u00eb")
        buf.write("\7p\2\2\u00ebD\3\2\2\2\u00ec\u00ed\7?\2\2\u00ed\u00ee")
        buf.write("\7@\2\2\u00eeF\3\2\2\2\u00ef\u00f0\7Q\2\2\u00f0\u00f1")
        buf.write("\7d\2\2\u00f1\u00f2\7l\2\2\u00f2\u00f3\7g\2\2\u00f3\u00f4")
        buf.write("\7e\2\2\u00f4\u00f5\7v\2\2\u00f5H\3\2\2\2\u00f6\u00f7")
        buf.write("\7N\2\2\u00f7\u00f8\7k\2\2\u00f8\u00f9\7u\2\2\u00f9\u00fa")
        buf.write("\7v\2\2\u00faJ\3\2\2\2\u00fb\u00fc\7V\2\2\u00fc\u00fd")
        buf.write("\7w\2\2\u00fd\u00fe\7r\2\2\u00fe\u00ff\7n\2\2\u00ff\u0100")
        buf.write("\7g\2\2\u0100L\3\2\2\2\u0101\u0102\7C\2\2\u0102\u0103")
        buf.write("\7p\2\2\u0103\u0104\7{\2\2\u0104N\3\2\2\2\u0105\u0106")
        buf.write("\7y\2\2\u0106\u0107\7j\2\2\u0107\u0108\7k\2\2\u0108\u0109")
        buf.write("\7n\2\2\u0109\u010a\7g\2\2\u010aP\3\2\2\2\u010b\u010c")
        buf.write("\7k\2\2\u010c\u010d\7h\2\2\u010dR\3\2\2\2\u010e\u010f")
        buf.write("\7g\2\2\u010f\u0110\7n\2\2\u0110\u0111\7u\2\2\u0111\u0112")
        buf.write("\7g\2\2\u0112T\3\2\2\2\u0113\u0114\7h\2\2\u0114\u0115")
        buf.write("\7w\2\2\u0115\u0116\7p\2\2\u0116\u0117\7e\2\2\u0117\u0118")
        buf.write("\7v\2\2\u0118\u0119\7k\2\2\u0119\u011a\7q\2\2\u011a\u011b")
        buf.write("\7p\2\2\u011bV\3\2\2\2\u011c\u011d\7p\2\2\u011d\u011e")
        buf.write("\7q\2\2\u011e\u011f\7v\2\2\u011f\u0120\7j\2\2\u0120\u0121")
        buf.write("\7t\2\2\u0121\u0122\7q\2\2\u0122\u0123\7y\2\2\u0123X\3")
        buf.write("\2\2\2\u0124\u0125\7v\2\2\u0125\u0126\7j\2\2\u0126\u0127")
        buf.write("\7t\2\2\u0127\u0128\7q\2\2\u0128\u0129\7y\2\2\u0129\u012a")
        buf.write("\7u\2\2\u012aZ\3\2\2\2\u012b\u012c\7p\2\2\u012c\u012d")
        buf.write("\7q\2\2\u012d\u012e\7g\2\2\u012e\u012f\7z\2\2\u012f\u0130")
        buf.write("\7k\2\2\u0130\u0131\7v\2\2\u0131\\\3\2\2\2\u0132\u0133")
        buf.write("\7t\2\2\u0133\u0134\7g\2\2\u0134\u0135\7v\2\2\u0135\u0136")
        buf.write("\7w\2\2\u0136\u0137\7t\2\2\u0137\u0138\7p\2\2\u0138^\3")
        buf.write("\2\2\2\u0139\u013a\7g\2\2\u013a\u013b\7z\2\2\u013b\u013c")
        buf.write("\7k\2\2\u013c\u013d\7v\2\2\u013d`\3\2\2\2\u013e\u0142")
        buf.write("\t\2\2\2\u013f\u0141\t\3\2\2\u0140\u013f\3\2\2\2\u0141")
        buf.write("\u0144\3\2\2\2\u0142\u0140\3\2\2\2\u0142\u0143\3\2\2\2")
        buf.write("\u0143b\3\2\2\2\u0144\u0142\3\2\2\2\u0145\u014a\7$\2\2")
        buf.write("\u0146\u0149\5e\63\2\u0147\u0149\5k\66\2\u0148\u0146\3")
        buf.write("\2\2\2\u0148\u0147\3\2\2\2\u0149\u014c\3\2\2\2\u014a\u0148")
        buf.write("\3\2\2\2\u014a\u014b\3\2\2\2\u014b\u014d\3\2\2\2\u014c")
        buf.write("\u014a\3\2\2\2\u014d\u014e\7$\2\2\u014ed\3\2\2\2\u014f")
        buf.write("\u0152\7^\2\2\u0150\u0153\t\4\2\2\u0151\u0153\5g\64\2")
        buf.write("\u0152\u0150\3\2\2\2\u0152\u0151\3\2\2\2\u0153f\3\2\2")
        buf.write("\2\u0154\u0155\7w\2\2\u0155\u0156\5i\65\2\u0156\u0157")
        buf.write("\5i\65\2\u0157\u0158\5i\65\2\u0158\u0159\5i\65\2\u0159")
        buf.write("h\3\2\2\2\u015a\u015b\t\5\2\2\u015bj\3\2\2\2\u015c\u015d")
        buf.write("\n\6\2\2\u015dl\3\2\2\2\u015e\u0165\5o8\2\u015f\u0161")
        buf.write("\7\60\2\2\u0160\u0162\t\7\2\2\u0161\u0160\3\2\2\2\u0162")
        buf.write("\u0163\3\2\2\2\u0163\u0161\3\2\2\2\u0163\u0164\3\2\2\2")
        buf.write("\u0164\u0166\3\2\2\2\u0165\u015f\3\2\2\2\u0165\u0166\3")
        buf.write("\2\2\2\u0166\u0168\3\2\2\2\u0167\u0169\5q9\2\u0168\u0167")
        buf.write("\3\2\2\2\u0168\u0169\3\2\2\2\u0169n\3\2\2\2\u016a\u0173")
        buf.write("\7\62\2\2\u016b\u016f\t\b\2\2\u016c\u016e\t\7\2\2\u016d")
        buf.write("\u016c\3\2\2\2\u016e\u0171\3\2\2\2\u016f\u016d\3\2\2\2")
        buf.write("\u016f\u0170\3\2\2\2\u0170\u0173\3\2\2\2\u0171\u016f\3")
        buf.write("\2\2\2\u0172\u016a\3\2\2\2\u0172\u016b\3\2\2\2\u0173p")
        buf.write("\3\2\2\2\u0174\u0176\t\t\2\2\u0175\u0177\t\n\2\2\u0176")
        buf.write("\u0175\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u0178\3\2\2\2")
        buf.write("\u0178\u0179\5o8\2\u0179r\3\2\2\2\u017a\u017c\t\13\2\2")
        buf.write("\u017b\u017a\3\2\2\2\u017c\u017d\3\2\2\2\u017d\u017b\3")
        buf.write("\2\2\2\u017d\u017e\3\2\2\2\u017e\u017f\3\2\2\2\u017f\u0180")
        buf.write("\b:\2\2\u0180t\3\2\2\2\16\2\u0142\u0148\u014a\u0152\u0163")
        buf.write("\u0165\u0168\u016f\u0172\u0176\u017d\3\2\3\2")
        return buf.getvalue()


class langLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    SYMBOL = 48
    STRING = 49
    NUMBER = 50
    WS = 51

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "';'", "'static'", "'typedef'", "'import'", "'='", "'{'", 
            "'}'", "':'", "'['", "']'", "'.'", "'('", "')'", "'+'", "'-'", 
            "'*'", "'/'", "'%'", "'>='", "'<='", "'>'", "'<'", "'=='", "'!='", 
            "'true'", "'false'", "'null'", "'Void'", "'var'", "'Integer'", 
            "'String'", "'Function'", "'=>'", "'Object'", "'List'", "'Tuple'", 
            "'Any'", "'while'", "'if'", "'else'", "'function'", "'nothrow'", 
            "'throws'", "'noexit'", "'return'", "'exit'" ]

    symbolicNames = [ "<INVALID>",
            "SYMBOL", "STRING", "NUMBER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "SYMBOL", "STRING", "ESC", 
                  "UNICODE", "HEX", "SAFECODEPOINT", "NUMBER", "INT", "EXP", 
                  "WS" ]

    grammarFileName = "lang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


