# Generated from lang.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2;")
        buf.write("\u01b0\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\3\2\3\2\3\3\3\3\3")
        buf.write("\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5")
        buf.write("\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3")
        buf.write("\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16")
        buf.write("\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23")
        buf.write("\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\30")
        buf.write("\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33")
        buf.write("\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36")
        buf.write("\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3")
        buf.write(" \3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3")
        buf.write("#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3)\3")
        buf.write(")\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3,\3")
        buf.write(",\3,\3,\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3/\3/\3/\3")
        buf.write("\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61")
        buf.write("\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62")
        buf.write("\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64")
        buf.write("\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\66")
        buf.write("\3\66\3\66\3\66\3\66\3\67\3\67\7\67\u016d\n\67\f\67\16")
        buf.write("\67\u0170\13\67\38\38\38\78\u0175\n8\f8\168\u0178\138")
        buf.write("\38\38\39\39\39\59\u017f\n9\3:\3:\3:\3:\3:\3:\3;\3;\3")
        buf.write("<\3<\3=\5=\u018c\n=\3=\3=\3=\6=\u0191\n=\r=\16=\u0192")
        buf.write("\5=\u0195\n=\3=\5=\u0198\n=\3>\3>\3>\7>\u019d\n>\f>\16")
        buf.write(">\u01a0\13>\5>\u01a2\n>\3?\3?\5?\u01a6\n?\3?\3?\3@\6@")
        buf.write("\u01ab\n@\r@\16@\u01ac\3@\3@\2\2A\3\3\5\4\7\5\t\6\13\7")
        buf.write("\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21")
        buf.write("!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67")
        buf.write("\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61")
        buf.write("a\62c\63e\64g\65i\66k\67m8o9q\2s\2u\2w\2y:{\2}\2\177;")
        buf.write("\3\2\f\5\2C\\aac|\6\2\62;C\\aac|\n\2$$\61\61^^ddhhppt")
        buf.write("tvv\5\2\62;CHch\5\2\2!$$^^\3\2\62;\3\2\63;\4\2GGgg\4\2")
        buf.write("--//\5\2\13\f\17\17\"\"\2\u01b5\2\3\3\2\2\2\2\5\3\2\2")
        buf.write("\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2")
        buf.write("\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27")
        buf.write("\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3")
        buf.write("\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2")
        buf.write(")\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2")
        buf.write("\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2")
        buf.write(";\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2")
        buf.write("\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2")
        buf.write("\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2")
        buf.write("\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3")
        buf.write("\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k")
        buf.write("\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2y\3\2\2\2\2\177\3\2\2")
        buf.write("\2\3\u0081\3\2\2\2\5\u0083\3\2\2\2\7\u0085\3\2\2\2\t\u008c")
        buf.write("\3\2\2\2\13\u0094\3\2\2\2\r\u009b\3\2\2\2\17\u009d\3\2")
        buf.write("\2\2\21\u009f\3\2\2\2\23\u00a1\3\2\2\2\25\u00a3\3\2\2")
        buf.write("\2\27\u00a5\3\2\2\2\31\u00a7\3\2\2\2\33\u00ac\3\2\2\2")
        buf.write("\35\u00ae\3\2\2\2\37\u00b0\3\2\2\2!\u00b2\3\2\2\2#\u00b4")
        buf.write("\3\2\2\2%\u00b6\3\2\2\2\'\u00b8\3\2\2\2)\u00ba\3\2\2\2")
        buf.write("+\u00bc\3\2\2\2-\u00be\3\2\2\2/\u00c0\3\2\2\2\61\u00c3")
        buf.write("\3\2\2\2\63\u00c6\3\2\2\2\65\u00ca\3\2\2\2\67\u00ce\3")
        buf.write("\2\2\29\u00d1\3\2\2\2;\u00d4\3\2\2\2=\u00d9\3\2\2\2?\u00e1")
        buf.write("\3\2\2\2A\u00e6\3\2\2\2C\u00ec\3\2\2\2E\u00f1\3\2\2\2")
        buf.write("G\u00f6\3\2\2\2I\u00fa\3\2\2\2K\u0102\3\2\2\2M\u0109\3")
        buf.write("\2\2\2O\u0112\3\2\2\2Q\u0115\3\2\2\2S\u011c\3\2\2\2U\u0121")
        buf.write("\3\2\2\2W\u0127\3\2\2\2Y\u012b\3\2\2\2[\u0131\3\2\2\2")
        buf.write("]\u0137\3\2\2\2_\u013a\3\2\2\2a\u013f\3\2\2\2c\u0148\3")
        buf.write("\2\2\2e\u0150\3\2\2\2g\u0157\3\2\2\2i\u015e\3\2\2\2k\u0165")
        buf.write("\3\2\2\2m\u016a\3\2\2\2o\u0171\3\2\2\2q\u017b\3\2\2\2")
        buf.write("s\u0180\3\2\2\2u\u0186\3\2\2\2w\u0188\3\2\2\2y\u018b\3")
        buf.write("\2\2\2{\u01a1\3\2\2\2}\u01a3\3\2\2\2\177\u01aa\3\2\2\2")
        buf.write("\u0081\u0082\7.\2\2\u0082\4\3\2\2\2\u0083\u0084\7=\2\2")
        buf.write("\u0084\6\3\2\2\2\u0085\u0086\7u\2\2\u0086\u0087\7v\2\2")
        buf.write("\u0087\u0088\7c\2\2\u0088\u0089\7v\2\2\u0089\u008a\7k")
        buf.write("\2\2\u008a\u008b\7e\2\2\u008b\b\3\2\2\2\u008c\u008d\7")
        buf.write("v\2\2\u008d\u008e\7{\2\2\u008e\u008f\7r\2\2\u008f\u0090")
        buf.write("\7g\2\2\u0090\u0091\7f\2\2\u0091\u0092\7g\2\2\u0092\u0093")
        buf.write("\7h\2\2\u0093\n\3\2\2\2\u0094\u0095\7k\2\2\u0095\u0096")
        buf.write("\7o\2\2\u0096\u0097\7r\2\2\u0097\u0098\7q\2\2\u0098\u0099")
        buf.write("\7t\2\2\u0099\u009a\7v\2\2\u009a\f\3\2\2\2\u009b\u009c")
        buf.write("\7?\2\2\u009c\16\3\2\2\2\u009d\u009e\7}\2\2\u009e\20\3")
        buf.write("\2\2\2\u009f\u00a0\7\177\2\2\u00a0\22\3\2\2\2\u00a1\u00a2")
        buf.write("\7<\2\2\u00a2\24\3\2\2\2\u00a3\u00a4\7]\2\2\u00a4\26\3")
        buf.write("\2\2\2\u00a5\u00a6\7_\2\2\u00a6\30\3\2\2\2\u00a7\u00a8")
        buf.write("\7e\2\2\u00a8\u00a9\7q\2\2\u00a9\u00aa\7f\2\2\u00aa\u00ab")
        buf.write("\7g\2\2\u00ab\32\3\2\2\2\u00ac\u00ad\7*\2\2\u00ad\34\3")
        buf.write("\2\2\2\u00ae\u00af\7+\2\2\u00af\36\3\2\2\2\u00b0\u00b1")
        buf.write("\7\60\2\2\u00b1 \3\2\2\2\u00b2\u00b3\7>\2\2\u00b3\"\3")
        buf.write("\2\2\2\u00b4\u00b5\7@\2\2\u00b5$\3\2\2\2\u00b6\u00b7\7")
        buf.write("-\2\2\u00b7&\3\2\2\2\u00b8\u00b9\7/\2\2\u00b9(\3\2\2\2")
        buf.write("\u00ba\u00bb\7,\2\2\u00bb*\3\2\2\2\u00bc\u00bd\7\61\2")
        buf.write("\2\u00bd,\3\2\2\2\u00be\u00bf\7\'\2\2\u00bf.\3\2\2\2\u00c0")
        buf.write("\u00c1\7@\2\2\u00c1\u00c2\7?\2\2\u00c2\60\3\2\2\2\u00c3")
        buf.write("\u00c4\7>\2\2\u00c4\u00c5\7?\2\2\u00c5\62\3\2\2\2\u00c6")
        buf.write("\u00c7\7\"\2\2\u00c7\u00c8\7>\2\2\u00c8\u00c9\7\"\2\2")
        buf.write("\u00c9\64\3\2\2\2\u00ca\u00cb\7\"\2\2\u00cb\u00cc\7@\2")
        buf.write("\2\u00cc\u00cd\7\"\2\2\u00cd\66\3\2\2\2\u00ce\u00cf\7")
        buf.write("?\2\2\u00cf\u00d0\7?\2\2\u00d08\3\2\2\2\u00d1\u00d2\7")
        buf.write("#\2\2\u00d2\u00d3\7?\2\2\u00d3:\3\2\2\2\u00d4\u00d5\7")
        buf.write("g\2\2\u00d5\u00d6\7z\2\2\u00d6\u00d7\7g\2\2\u00d7\u00d8")
        buf.write("\7e\2\2\u00d8<\3\2\2\2\u00d9\u00da\7f\2\2\u00da\u00db")
        buf.write("\7{\2\2\u00db\u00dc\7p\2\2\u00dc\u00dd\7c\2\2\u00dd\u00de")
        buf.write("\7o\2\2\u00de\u00df\7k\2\2\u00df\u00e0\7e\2\2\u00e0>\3")
        buf.write("\2\2\2\u00e1\u00e2\7v\2\2\u00e2\u00e3\7t\2\2\u00e3\u00e4")
        buf.write("\7w\2\2\u00e4\u00e5\7g\2\2\u00e5@\3\2\2\2\u00e6\u00e7")
        buf.write("\7h\2\2\u00e7\u00e8\7c\2\2\u00e8\u00e9\7n\2\2\u00e9\u00ea")
        buf.write("\7u\2\2\u00ea\u00eb\7g\2\2\u00ebB\3\2\2\2\u00ec\u00ed")
        buf.write("\7p\2\2\u00ed\u00ee\7w\2\2\u00ee\u00ef\7n\2\2\u00ef\u00f0")
        buf.write("\7n\2\2\u00f0D\3\2\2\2\u00f1\u00f2\7X\2\2\u00f2\u00f3")
        buf.write("\7q\2\2\u00f3\u00f4\7k\2\2\u00f4\u00f5\7f\2\2\u00f5F\3")
        buf.write("\2\2\2\u00f6\u00f7\7x\2\2\u00f7\u00f8\7c\2\2\u00f8\u00f9")
        buf.write("\7t\2\2\u00f9H\3\2\2\2\u00fa\u00fb\7K\2\2\u00fb\u00fc")
        buf.write("\7p\2\2\u00fc\u00fd\7v\2\2\u00fd\u00fe\7g\2\2\u00fe\u00ff")
        buf.write("\7i\2\2\u00ff\u0100\7g\2\2\u0100\u0101\7t\2\2\u0101J\3")
        buf.write("\2\2\2\u0102\u0103\7U\2\2\u0103\u0104\7v\2\2\u0104\u0105")
        buf.write("\7t\2\2\u0105\u0106\7k\2\2\u0106\u0107\7p\2\2\u0107\u0108")
        buf.write("\7i\2\2\u0108L\3\2\2\2\u0109\u010a\7H\2\2\u010a\u010b")
        buf.write("\7w\2\2\u010b\u010c\7p\2\2\u010c\u010d\7e\2\2\u010d\u010e")
        buf.write("\7v\2\2\u010e\u010f\7k\2\2\u010f\u0110\7q\2\2\u0110\u0111")
        buf.write("\7p\2\2\u0111N\3\2\2\2\u0112\u0113\7?\2\2\u0113\u0114")
        buf.write("\7@\2\2\u0114P\3\2\2\2\u0115\u0116\7Q\2\2\u0116\u0117")
        buf.write("\7d\2\2\u0117\u0118\7l\2\2\u0118\u0119\7g\2\2\u0119\u011a")
        buf.write("\7e\2\2\u011a\u011b\7v\2\2\u011bR\3\2\2\2\u011c\u011d")
        buf.write("\7N\2\2\u011d\u011e\7k\2\2\u011e\u011f\7u\2\2\u011f\u0120")
        buf.write("\7v\2\2\u0120T\3\2\2\2\u0121\u0122\7V\2\2\u0122\u0123")
        buf.write("\7w\2\2\u0123\u0124\7r\2\2\u0124\u0125\7n\2\2\u0125\u0126")
        buf.write("\7g\2\2\u0126V\3\2\2\2\u0127\u0128\7C\2\2\u0128\u0129")
        buf.write("\7p\2\2\u0129\u012a\7{\2\2\u012aX\3\2\2\2\u012b\u012c")
        buf.write("\7e\2\2\u012c\u012d\7q\2\2\u012d\u012e\7p\2\2\u012e\u012f")
        buf.write("\7u\2\2\u012f\u0130\7v\2\2\u0130Z\3\2\2\2\u0131\u0132")
        buf.write("\7y\2\2\u0132\u0133\7j\2\2\u0133\u0134\7k\2\2\u0134\u0135")
        buf.write("\7n\2\2\u0135\u0136\7g\2\2\u0136\\\3\2\2\2\u0137\u0138")
        buf.write("\7k\2\2\u0138\u0139\7h\2\2\u0139^\3\2\2\2\u013a\u013b")
        buf.write("\7g\2\2\u013b\u013c\7n\2\2\u013c\u013d\7u\2\2\u013d\u013e")
        buf.write("\7g\2\2\u013e`\3\2\2\2\u013f\u0140\7h\2\2\u0140\u0141")
        buf.write("\7w\2\2\u0141\u0142\7p\2\2\u0142\u0143\7e\2\2\u0143\u0144")
        buf.write("\7v\2\2\u0144\u0145\7k\2\2\u0145\u0146\7q\2\2\u0146\u0147")
        buf.write("\7p\2\2\u0147b\3\2\2\2\u0148\u0149\7p\2\2\u0149\u014a")
        buf.write("\7q\2\2\u014a\u014b\7v\2\2\u014b\u014c\7j\2\2\u014c\u014d")
        buf.write("\7t\2\2\u014d\u014e\7q\2\2\u014e\u014f\7y\2\2\u014fd\3")
        buf.write("\2\2\2\u0150\u0151\7v\2\2\u0151\u0152\7j\2\2\u0152\u0153")
        buf.write("\7t\2\2\u0153\u0154\7q\2\2\u0154\u0155\7y\2\2\u0155\u0156")
        buf.write("\7u\2\2\u0156f\3\2\2\2\u0157\u0158\7p\2\2\u0158\u0159")
        buf.write("\7q\2\2\u0159\u015a\7g\2\2\u015a\u015b\7z\2\2\u015b\u015c")
        buf.write("\7k\2\2\u015c\u015d\7v\2\2\u015dh\3\2\2\2\u015e\u015f")
        buf.write("\7t\2\2\u015f\u0160\7g\2\2\u0160\u0161\7v\2\2\u0161\u0162")
        buf.write("\7w\2\2\u0162\u0163\7t\2\2\u0163\u0164\7p\2\2\u0164j\3")
        buf.write("\2\2\2\u0165\u0166\7g\2\2\u0166\u0167\7z\2\2\u0167\u0168")
        buf.write("\7k\2\2\u0168\u0169\7v\2\2\u0169l\3\2\2\2\u016a\u016e")
        buf.write("\t\2\2\2\u016b\u016d\t\3\2\2\u016c\u016b\3\2\2\2\u016d")
        buf.write("\u0170\3\2\2\2\u016e\u016c\3\2\2\2\u016e\u016f\3\2\2\2")
        buf.write("\u016fn\3\2\2\2\u0170\u016e\3\2\2\2\u0171\u0176\7$\2\2")
        buf.write("\u0172\u0175\5q9\2\u0173\u0175\5w<\2\u0174\u0172\3\2\2")
        buf.write("\2\u0174\u0173\3\2\2\2\u0175\u0178\3\2\2\2\u0176\u0174")
        buf.write("\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u0179\3\2\2\2\u0178")
        buf.write("\u0176\3\2\2\2\u0179\u017a\7$\2\2\u017ap\3\2\2\2\u017b")
        buf.write("\u017e\7^\2\2\u017c\u017f\t\4\2\2\u017d\u017f\5s:\2\u017e")
        buf.write("\u017c\3\2\2\2\u017e\u017d\3\2\2\2\u017fr\3\2\2\2\u0180")
        buf.write("\u0181\7w\2\2\u0181\u0182\5u;\2\u0182\u0183\5u;\2\u0183")
        buf.write("\u0184\5u;\2\u0184\u0185\5u;\2\u0185t\3\2\2\2\u0186\u0187")
        buf.write("\t\5\2\2\u0187v\3\2\2\2\u0188\u0189\n\6\2\2\u0189x\3\2")
        buf.write("\2\2\u018a\u018c\7/\2\2\u018b\u018a\3\2\2\2\u018b\u018c")
        buf.write("\3\2\2\2\u018c\u018d\3\2\2\2\u018d\u0194\5{>\2\u018e\u0190")
        buf.write("\7\60\2\2\u018f\u0191\t\7\2\2\u0190\u018f\3\2\2\2\u0191")
        buf.write("\u0192\3\2\2\2\u0192\u0190\3\2\2\2\u0192\u0193\3\2\2\2")
        buf.write("\u0193\u0195\3\2\2\2\u0194\u018e\3\2\2\2\u0194\u0195\3")
        buf.write("\2\2\2\u0195\u0197\3\2\2\2\u0196\u0198\5}?\2\u0197\u0196")
        buf.write("\3\2\2\2\u0197\u0198\3\2\2\2\u0198z\3\2\2\2\u0199\u01a2")
        buf.write("\7\62\2\2\u019a\u019e\t\b\2\2\u019b\u019d\t\7\2\2\u019c")
        buf.write("\u019b\3\2\2\2\u019d\u01a0\3\2\2\2\u019e\u019c\3\2\2\2")
        buf.write("\u019e\u019f\3\2\2\2\u019f\u01a2\3\2\2\2\u01a0\u019e\3")
        buf.write("\2\2\2\u01a1\u0199\3\2\2\2\u01a1\u019a\3\2\2\2\u01a2|")
        buf.write("\3\2\2\2\u01a3\u01a5\t\t\2\2\u01a4\u01a6\t\n\2\2\u01a5")
        buf.write("\u01a4\3\2\2\2\u01a5\u01a6\3\2\2\2\u01a6\u01a7\3\2\2\2")
        buf.write("\u01a7\u01a8\5{>\2\u01a8~\3\2\2\2\u01a9\u01ab\t\13\2\2")
        buf.write("\u01aa\u01a9\3\2\2\2\u01ab\u01ac\3\2\2\2\u01ac\u01aa\3")
        buf.write("\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01ae\3\2\2\2\u01ae\u01af")
        buf.write("\b@\2\2\u01af\u0080\3\2\2\2\17\2\u016e\u0174\u0176\u017e")
        buf.write("\u018b\u0192\u0194\u0197\u019e\u01a1\u01a5\u01ac\3\2\3")
        buf.write("\2")
        return buf.getvalue()


class langLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    SYMBOL = 54
    STRING = 55
    NUMBER = 56
    WS = 57

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "';'", "'static'", "'typedef'", "'import'", "'='", "'{'", 
            "'}'", "':'", "'['", "']'", "'code'", "'('", "')'", "'.'", "'<'", 
            "'>'", "'+'", "'-'", "'*'", "'/'", "'%'", "'>='", "'<='", "' < '", 
            "' > '", "'=='", "'!='", "'exec'", "'dynamic'", "'true'", "'false'", 
            "'null'", "'Void'", "'var'", "'Integer'", "'String'", "'Function'", 
            "'=>'", "'Object'", "'List'", "'Tuple'", "'Any'", "'const'", 
            "'while'", "'if'", "'else'", "'function'", "'nothrow'", "'throws'", 
            "'noexit'", "'return'", "'exit'" ]

    symbolicNames = [ "<INVALID>",
            "SYMBOL", "STRING", "NUMBER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "SYMBOL", "STRING", "ESC", 
                  "UNICODE", "HEX", "SAFECODEPOINT", "NUMBER", "INT", "EXP", 
                  "WS" ]

    grammarFileName = "lang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


