# Generated from lang.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\63")
        buf.write("\u0172\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\3\2\3\2\3\3")
        buf.write("\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3")
        buf.write("\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b")
        buf.write("\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3")
        buf.write("\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24")
        buf.write("\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\30\3\30")
        buf.write("\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3")
        buf.write(" \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"")
        buf.write("\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3%")
        buf.write("\3%\3%\3%\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3(\3")
        buf.write("(\3)\3)\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3")
        buf.write("+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3")
        buf.write("-\3-\3-\3.\3.\3.\3.\3.\3/\3/\7/\u0132\n/\f/\16/\u0135")
        buf.write("\13/\3\60\3\60\3\60\7\60\u013a\n\60\f\60\16\60\u013d\13")
        buf.write("\60\3\60\3\60\3\61\3\61\3\61\5\61\u0144\n\61\3\62\3\62")
        buf.write("\3\62\3\62\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\65")
        buf.write("\6\65\u0153\n\65\r\65\16\65\u0154\5\65\u0157\n\65\3\65")
        buf.write("\5\65\u015a\n\65\3\66\3\66\3\66\7\66\u015f\n\66\f\66\16")
        buf.write("\66\u0162\13\66\5\66\u0164\n\66\3\67\3\67\5\67\u0168\n")
        buf.write("\67\3\67\3\67\38\68\u016d\n8\r8\168\u016e\38\38\2\29\3")
        buf.write("\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16")
        buf.write("\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61")
        buf.write("\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*")
        buf.write("S+U,W-Y.[/]\60_\61a\2c\2e\2g\2i\62k\2m\2o\63\3\2\f\5\2")
        buf.write("C\\aac|\6\2\62;C\\aac|\n\2$$\61\61^^ddhhppttvv\5\2\62")
        buf.write(";CHch\5\2\2!$$^^\3\2\62;\3\2\63;\4\2GGgg\4\2--//\5\2\13")
        buf.write("\f\17\17\"\"\2\u0176\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2")
        buf.write("\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2")
        buf.write("\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31")
        buf.write("\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2")
        buf.write("\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3")
        buf.write("\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2")
        buf.write("\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3")
        buf.write("\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G")
        buf.write("\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2")
        buf.write("Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2")
        buf.write("\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2i\3\2\2\2\2o\3\2\2")
        buf.write("\2\3q\3\2\2\2\5s\3\2\2\2\7u\3\2\2\2\t|\3\2\2\2\13\u0084")
        buf.write("\3\2\2\2\r\u008b\3\2\2\2\17\u008d\3\2\2\2\21\u008f\3\2")
        buf.write("\2\2\23\u0091\3\2\2\2\25\u0093\3\2\2\2\27\u0095\3\2\2")
        buf.write("\2\31\u0097\3\2\2\2\33\u0099\3\2\2\2\35\u009b\3\2\2\2")
        buf.write("\37\u009d\3\2\2\2!\u009f\3\2\2\2#\u00a1\3\2\2\2%\u00a3")
        buf.write("\3\2\2\2\'\u00a5\3\2\2\2)\u00a7\3\2\2\2+\u00aa\3\2\2\2")
        buf.write("-\u00ad\3\2\2\2/\u00af\3\2\2\2\61\u00b1\3\2\2\2\63\u00b4")
        buf.write("\3\2\2\2\65\u00b7\3\2\2\2\67\u00bc\3\2\2\29\u00c2\3\2")
        buf.write("\2\2;\u00c7\3\2\2\2=\u00cc\3\2\2\2?\u00d0\3\2\2\2A\u00d8")
        buf.write("\3\2\2\2C\u00df\3\2\2\2E\u00e8\3\2\2\2G\u00eb\3\2\2\2")
        buf.write("I\u00f2\3\2\2\2K\u00f6\3\2\2\2M\u00fc\3\2\2\2O\u00ff\3")
        buf.write("\2\2\2Q\u0104\3\2\2\2S\u010d\3\2\2\2U\u0115\3\2\2\2W\u011c")
        buf.write("\3\2\2\2Y\u0123\3\2\2\2[\u012a\3\2\2\2]\u012f\3\2\2\2")
        buf.write("_\u0136\3\2\2\2a\u0140\3\2\2\2c\u0145\3\2\2\2e\u014b\3")
        buf.write("\2\2\2g\u014d\3\2\2\2i\u014f\3\2\2\2k\u0163\3\2\2\2m\u0165")
        buf.write("\3\2\2\2o\u016c\3\2\2\2qr\7.\2\2r\4\3\2\2\2st\7=\2\2t")
        buf.write("\6\3\2\2\2uv\7u\2\2vw\7v\2\2wx\7c\2\2xy\7v\2\2yz\7k\2")
        buf.write("\2z{\7e\2\2{\b\3\2\2\2|}\7v\2\2}~\7{\2\2~\177\7r\2\2\177")
        buf.write("\u0080\7g\2\2\u0080\u0081\7f\2\2\u0081\u0082\7g\2\2\u0082")
        buf.write("\u0083\7h\2\2\u0083\n\3\2\2\2\u0084\u0085\7k\2\2\u0085")
        buf.write("\u0086\7o\2\2\u0086\u0087\7r\2\2\u0087\u0088\7q\2\2\u0088")
        buf.write("\u0089\7t\2\2\u0089\u008a\7v\2\2\u008a\f\3\2\2\2\u008b")
        buf.write("\u008c\7?\2\2\u008c\16\3\2\2\2\u008d\u008e\7}\2\2\u008e")
        buf.write("\20\3\2\2\2\u008f\u0090\7\177\2\2\u0090\22\3\2\2\2\u0091")
        buf.write("\u0092\7<\2\2\u0092\24\3\2\2\2\u0093\u0094\7]\2\2\u0094")
        buf.write("\26\3\2\2\2\u0095\u0096\7_\2\2\u0096\30\3\2\2\2\u0097")
        buf.write("\u0098\7\60\2\2\u0098\32\3\2\2\2\u0099\u009a\7*\2\2\u009a")
        buf.write("\34\3\2\2\2\u009b\u009c\7+\2\2\u009c\36\3\2\2\2\u009d")
        buf.write("\u009e\7,\2\2\u009e \3\2\2\2\u009f\u00a0\7\61\2\2\u00a0")
        buf.write("\"\3\2\2\2\u00a1\u00a2\7-\2\2\u00a2$\3\2\2\2\u00a3\u00a4")
        buf.write("\7/\2\2\u00a4&\3\2\2\2\u00a5\u00a6\7\'\2\2\u00a6(\3\2")
        buf.write("\2\2\u00a7\u00a8\7@\2\2\u00a8\u00a9\7?\2\2\u00a9*\3\2")
        buf.write("\2\2\u00aa\u00ab\7>\2\2\u00ab\u00ac\7?\2\2\u00ac,\3\2")
        buf.write("\2\2\u00ad\u00ae\7@\2\2\u00ae.\3\2\2\2\u00af\u00b0\7>")
        buf.write("\2\2\u00b0\60\3\2\2\2\u00b1\u00b2\7?\2\2\u00b2\u00b3\7")
        buf.write("?\2\2\u00b3\62\3\2\2\2\u00b4\u00b5\7#\2\2\u00b5\u00b6")
        buf.write("\7?\2\2\u00b6\64\3\2\2\2\u00b7\u00b8\7v\2\2\u00b8\u00b9")
        buf.write("\7t\2\2\u00b9\u00ba\7w\2\2\u00ba\u00bb\7g\2\2\u00bb\66")
        buf.write("\3\2\2\2\u00bc\u00bd\7h\2\2\u00bd\u00be\7c\2\2\u00be\u00bf")
        buf.write("\7n\2\2\u00bf\u00c0\7u\2\2\u00c0\u00c1\7g\2\2\u00c18\3")
        buf.write("\2\2\2\u00c2\u00c3\7p\2\2\u00c3\u00c4\7w\2\2\u00c4\u00c5")
        buf.write("\7n\2\2\u00c5\u00c6\7n\2\2\u00c6:\3\2\2\2\u00c7\u00c8")
        buf.write("\7X\2\2\u00c8\u00c9\7q\2\2\u00c9\u00ca\7k\2\2\u00ca\u00cb")
        buf.write("\7f\2\2\u00cb<\3\2\2\2\u00cc\u00cd\7x\2\2\u00cd\u00ce")
        buf.write("\7c\2\2\u00ce\u00cf\7t\2\2\u00cf>\3\2\2\2\u00d0\u00d1")
        buf.write("\7K\2\2\u00d1\u00d2\7p\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4")
        buf.write("\7g\2\2\u00d4\u00d5\7i\2\2\u00d5\u00d6\7g\2\2\u00d6\u00d7")
        buf.write("\7t\2\2\u00d7@\3\2\2\2\u00d8\u00d9\7U\2\2\u00d9\u00da")
        buf.write("\7v\2\2\u00da\u00db\7t\2\2\u00db\u00dc\7k\2\2\u00dc\u00dd")
        buf.write("\7p\2\2\u00dd\u00de\7i\2\2\u00deB\3\2\2\2\u00df\u00e0")
        buf.write("\7H\2\2\u00e0\u00e1\7w\2\2\u00e1\u00e2\7p\2\2\u00e2\u00e3")
        buf.write("\7e\2\2\u00e3\u00e4\7v\2\2\u00e4\u00e5\7k\2\2\u00e5\u00e6")
        buf.write("\7q\2\2\u00e6\u00e7\7p\2\2\u00e7D\3\2\2\2\u00e8\u00e9")
        buf.write("\7?\2\2\u00e9\u00ea\7@\2\2\u00eaF\3\2\2\2\u00eb\u00ec")
        buf.write("\7Q\2\2\u00ec\u00ed\7d\2\2\u00ed\u00ee\7l\2\2\u00ee\u00ef")
        buf.write("\7g\2\2\u00ef\u00f0\7e\2\2\u00f0\u00f1\7v\2\2\u00f1H\3")
        buf.write("\2\2\2\u00f2\u00f3\7C\2\2\u00f3\u00f4\7p\2\2\u00f4\u00f5")
        buf.write("\7{\2\2\u00f5J\3\2\2\2\u00f6\u00f7\7y\2\2\u00f7\u00f8")
        buf.write("\7j\2\2\u00f8\u00f9\7k\2\2\u00f9\u00fa\7n\2\2\u00fa\u00fb")
        buf.write("\7g\2\2\u00fbL\3\2\2\2\u00fc\u00fd\7k\2\2\u00fd\u00fe")
        buf.write("\7h\2\2\u00feN\3\2\2\2\u00ff\u0100\7g\2\2\u0100\u0101")
        buf.write("\7n\2\2\u0101\u0102\7u\2\2\u0102\u0103\7g\2\2\u0103P\3")
        buf.write("\2\2\2\u0104\u0105\7h\2\2\u0105\u0106\7w\2\2\u0106\u0107")
        buf.write("\7p\2\2\u0107\u0108\7e\2\2\u0108\u0109\7v\2\2\u0109\u010a")
        buf.write("\7k\2\2\u010a\u010b\7q\2\2\u010b\u010c\7p\2\2\u010cR\3")
        buf.write("\2\2\2\u010d\u010e\7p\2\2\u010e\u010f\7q\2\2\u010f\u0110")
        buf.write("\7v\2\2\u0110\u0111\7j\2\2\u0111\u0112\7t\2\2\u0112\u0113")
        buf.write("\7q\2\2\u0113\u0114\7y\2\2\u0114T\3\2\2\2\u0115\u0116")
        buf.write("\7v\2\2\u0116\u0117\7j\2\2\u0117\u0118\7t\2\2\u0118\u0119")
        buf.write("\7q\2\2\u0119\u011a\7y\2\2\u011a\u011b\7u\2\2\u011bV\3")
        buf.write("\2\2\2\u011c\u011d\7p\2\2\u011d\u011e\7q\2\2\u011e\u011f")
        buf.write("\7g\2\2\u011f\u0120\7z\2\2\u0120\u0121\7k\2\2\u0121\u0122")
        buf.write("\7v\2\2\u0122X\3\2\2\2\u0123\u0124\7t\2\2\u0124\u0125")
        buf.write("\7g\2\2\u0125\u0126\7v\2\2\u0126\u0127\7w\2\2\u0127\u0128")
        buf.write("\7t\2\2\u0128\u0129\7p\2\2\u0129Z\3\2\2\2\u012a\u012b")
        buf.write("\7g\2\2\u012b\u012c\7z\2\2\u012c\u012d\7k\2\2\u012d\u012e")
        buf.write("\7v\2\2\u012e\\\3\2\2\2\u012f\u0133\t\2\2\2\u0130\u0132")
        buf.write("\t\3\2\2\u0131\u0130\3\2\2\2\u0132\u0135\3\2\2\2\u0133")
        buf.write("\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134^\3\2\2\2\u0135")
        buf.write("\u0133\3\2\2\2\u0136\u013b\7$\2\2\u0137\u013a\5a\61\2")
        buf.write("\u0138\u013a\5g\64\2\u0139\u0137\3\2\2\2\u0139\u0138\3")
        buf.write("\2\2\2\u013a\u013d\3\2\2\2\u013b\u0139\3\2\2\2\u013b\u013c")
        buf.write("\3\2\2\2\u013c\u013e\3\2\2\2\u013d\u013b\3\2\2\2\u013e")
        buf.write("\u013f\7$\2\2\u013f`\3\2\2\2\u0140\u0143\7^\2\2\u0141")
        buf.write("\u0144\t\4\2\2\u0142\u0144\5c\62\2\u0143\u0141\3\2\2\2")
        buf.write("\u0143\u0142\3\2\2\2\u0144b\3\2\2\2\u0145\u0146\7w\2\2")
        buf.write("\u0146\u0147\5e\63\2\u0147\u0148\5e\63\2\u0148\u0149\5")
        buf.write("e\63\2\u0149\u014a\5e\63\2\u014ad\3\2\2\2\u014b\u014c")
        buf.write("\t\5\2\2\u014cf\3\2\2\2\u014d\u014e\n\6\2\2\u014eh\3\2")
        buf.write("\2\2\u014f\u0156\5k\66\2\u0150\u0152\7\60\2\2\u0151\u0153")
        buf.write("\t\7\2\2\u0152\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154")
        buf.write("\u0152\3\2\2\2\u0154\u0155\3\2\2\2\u0155\u0157\3\2\2\2")
        buf.write("\u0156\u0150\3\2\2\2\u0156\u0157\3\2\2\2\u0157\u0159\3")
        buf.write("\2\2\2\u0158\u015a\5m\67\2\u0159\u0158\3\2\2\2\u0159\u015a")
        buf.write("\3\2\2\2\u015aj\3\2\2\2\u015b\u0164\7\62\2\2\u015c\u0160")
        buf.write("\t\b\2\2\u015d\u015f\t\7\2\2\u015e\u015d\3\2\2\2\u015f")
        buf.write("\u0162\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161\3\2\2\2")
        buf.write("\u0161\u0164\3\2\2\2\u0162\u0160\3\2\2\2\u0163\u015b\3")
        buf.write("\2\2\2\u0163\u015c\3\2\2\2\u0164l\3\2\2\2\u0165\u0167")
        buf.write("\t\t\2\2\u0166\u0168\t\n\2\2\u0167\u0166\3\2\2\2\u0167")
        buf.write("\u0168\3\2\2\2\u0168\u0169\3\2\2\2\u0169\u016a\5k\66\2")
        buf.write("\u016an\3\2\2\2\u016b\u016d\t\13\2\2\u016c\u016b\3\2\2")
        buf.write("\2\u016d\u016e\3\2\2\2\u016e\u016c\3\2\2\2\u016e\u016f")
        buf.write("\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u0171\b8\2\2\u0171")
        buf.write("p\3\2\2\2\16\2\u0133\u0139\u013b\u0143\u0154\u0156\u0159")
        buf.write("\u0160\u0163\u0167\u016e\3\2\3\2")
        return buf.getvalue()


class langLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    SYMBOL = 46
    STRING = 47
    NUMBER = 48
    WS = 49

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "';'", "'static'", "'typedef'", "'import'", "'='", "'{'", 
            "'}'", "':'", "'['", "']'", "'.'", "'('", "')'", "'*'", "'/'", 
            "'+'", "'-'", "'%'", "'>='", "'<='", "'>'", "'<'", "'=='", "'!='", 
            "'true'", "'false'", "'null'", "'Void'", "'var'", "'Integer'", 
            "'String'", "'Function'", "'=>'", "'Object'", "'Any'", "'while'", 
            "'if'", "'else'", "'function'", "'nothrow'", "'throws'", "'noexit'", 
            "'return'", "'exit'" ]

    symbolicNames = [ "<INVALID>",
            "SYMBOL", "STRING", "NUMBER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "SYMBOL", "STRING", "ESC", "UNICODE", "HEX", 
                  "SAFECODEPOINT", "NUMBER", "INT", "EXP", "WS" ]

    grammarFileName = "lang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


