# Generated from lang.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\67")
        buf.write("\u0190\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6")
        buf.write("\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f")
        buf.write("\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3")
        buf.write("\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37")
        buf.write("\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!")
        buf.write("\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3")
        buf.write("#\3#\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'")
        buf.write("\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3*")
        buf.write("\3*\3*\3*\3*\3*\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3")
        buf.write("-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3")
        buf.write("/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61")
        buf.write("\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\63\3\63")
        buf.write("\7\63\u0150\n\63\f\63\16\63\u0153\13\63\3\64\3\64\3\64")
        buf.write("\7\64\u0158\n\64\f\64\16\64\u015b\13\64\3\64\3\64\3\65")
        buf.write("\3\65\3\65\5\65\u0162\n\65\3\66\3\66\3\66\3\66\3\66\3")
        buf.write("\66\3\67\3\67\38\38\39\39\39\69\u0171\n9\r9\169\u0172")
        buf.write("\59\u0175\n9\39\59\u0178\n9\3:\3:\3:\7:\u017d\n:\f:\16")
        buf.write(":\u0180\13:\5:\u0182\n:\3;\3;\5;\u0186\n;\3;\3;\3<\6<")
        buf.write("\u018b\n<\r<\16<\u018c\3<\3<\2\2=\3\3\5\4\7\5\t\6\13\7")
        buf.write("\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21")
        buf.write("!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67")
        buf.write("\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61")
        buf.write("a\62c\63e\64g\65i\2k\2m\2o\2q\66s\2u\2w\67\3\2\f\5\2C")
        buf.write("\\aac|\6\2\62;C\\aac|\n\2$$\61\61^^ddhhppttvv\5\2\62;")
        buf.write("CHch\5\2\2!$$^^\3\2\62;\3\2\63;\4\2GGgg\4\2--//\5\2\13")
        buf.write("\f\17\17\"\"\2\u0194\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2")
        buf.write("\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2")
        buf.write("\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31")
        buf.write("\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2")
        buf.write("\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3")
        buf.write("\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2")
        buf.write("\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3")
        buf.write("\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G")
        buf.write("\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2")
        buf.write("Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2")
        buf.write("\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2")
        buf.write("\2\2e\3\2\2\2\2g\3\2\2\2\2q\3\2\2\2\2w\3\2\2\2\3y\3\2")
        buf.write("\2\2\5{\3\2\2\2\7}\3\2\2\2\t\u0084\3\2\2\2\13\u008c\3")
        buf.write("\2\2\2\r\u0093\3\2\2\2\17\u0095\3\2\2\2\21\u0097\3\2\2")
        buf.write("\2\23\u0099\3\2\2\2\25\u009b\3\2\2\2\27\u009d\3\2\2\2")
        buf.write("\31\u009f\3\2\2\2\33\u00a1\3\2\2\2\35\u00a3\3\2\2\2\37")
        buf.write("\u00a5\3\2\2\2!\u00a7\3\2\2\2#\u00a9\3\2\2\2%\u00ab\3")
        buf.write("\2\2\2\'\u00ad\3\2\2\2)\u00af\3\2\2\2+\u00b2\3\2\2\2-")
        buf.write("\u00b5\3\2\2\2/\u00b7\3\2\2\2\61\u00b9\3\2\2\2\63\u00bc")
        buf.write("\3\2\2\2\65\u00bf\3\2\2\2\67\u00c4\3\2\2\29\u00c9\3\2")
        buf.write("\2\2;\u00cf\3\2\2\2=\u00d4\3\2\2\2?\u00d9\3\2\2\2A\u00dd")
        buf.write("\3\2\2\2C\u00e5\3\2\2\2E\u00ec\3\2\2\2G\u00f5\3\2\2\2")
        buf.write("I\u00f8\3\2\2\2K\u00ff\3\2\2\2M\u0104\3\2\2\2O\u010a\3")
        buf.write("\2\2\2Q\u010e\3\2\2\2S\u0114\3\2\2\2U\u011a\3\2\2\2W\u011d")
        buf.write("\3\2\2\2Y\u0122\3\2\2\2[\u012b\3\2\2\2]\u0133\3\2\2\2")
        buf.write("_\u013a\3\2\2\2a\u0141\3\2\2\2c\u0148\3\2\2\2e\u014d\3")
        buf.write("\2\2\2g\u0154\3\2\2\2i\u015e\3\2\2\2k\u0163\3\2\2\2m\u0169")
        buf.write("\3\2\2\2o\u016b\3\2\2\2q\u016d\3\2\2\2s\u0181\3\2\2\2")
        buf.write("u\u0183\3\2\2\2w\u018a\3\2\2\2yz\7.\2\2z\4\3\2\2\2{|\7")
        buf.write("=\2\2|\6\3\2\2\2}~\7u\2\2~\177\7v\2\2\177\u0080\7c\2\2")
        buf.write("\u0080\u0081\7v\2\2\u0081\u0082\7k\2\2\u0082\u0083\7e")
        buf.write("\2\2\u0083\b\3\2\2\2\u0084\u0085\7v\2\2\u0085\u0086\7")
        buf.write("{\2\2\u0086\u0087\7r\2\2\u0087\u0088\7g\2\2\u0088\u0089")
        buf.write("\7f\2\2\u0089\u008a\7g\2\2\u008a\u008b\7h\2\2\u008b\n")
        buf.write("\3\2\2\2\u008c\u008d\7k\2\2\u008d\u008e\7o\2\2\u008e\u008f")
        buf.write("\7r\2\2\u008f\u0090\7q\2\2\u0090\u0091\7t\2\2\u0091\u0092")
        buf.write("\7v\2\2\u0092\f\3\2\2\2\u0093\u0094\7?\2\2\u0094\16\3")
        buf.write("\2\2\2\u0095\u0096\7}\2\2\u0096\20\3\2\2\2\u0097\u0098")
        buf.write("\7\177\2\2\u0098\22\3\2\2\2\u0099\u009a\7<\2\2\u009a\24")
        buf.write("\3\2\2\2\u009b\u009c\7]\2\2\u009c\26\3\2\2\2\u009d\u009e")
        buf.write("\7_\2\2\u009e\30\3\2\2\2\u009f\u00a0\7\60\2\2\u00a0\32")
        buf.write("\3\2\2\2\u00a1\u00a2\7*\2\2\u00a2\34\3\2\2\2\u00a3\u00a4")
        buf.write("\7+\2\2\u00a4\36\3\2\2\2\u00a5\u00a6\7-\2\2\u00a6 \3\2")
        buf.write("\2\2\u00a7\u00a8\7/\2\2\u00a8\"\3\2\2\2\u00a9\u00aa\7")
        buf.write(",\2\2\u00aa$\3\2\2\2\u00ab\u00ac\7\61\2\2\u00ac&\3\2\2")
        buf.write("\2\u00ad\u00ae\7\'\2\2\u00ae(\3\2\2\2\u00af\u00b0\7@\2")
        buf.write("\2\u00b0\u00b1\7?\2\2\u00b1*\3\2\2\2\u00b2\u00b3\7>\2")
        buf.write("\2\u00b3\u00b4\7?\2\2\u00b4,\3\2\2\2\u00b5\u00b6\7@\2")
        buf.write("\2\u00b6.\3\2\2\2\u00b7\u00b8\7>\2\2\u00b8\60\3\2\2\2")
        buf.write("\u00b9\u00ba\7?\2\2\u00ba\u00bb\7?\2\2\u00bb\62\3\2\2")
        buf.write("\2\u00bc\u00bd\7#\2\2\u00bd\u00be\7?\2\2\u00be\64\3\2")
        buf.write("\2\2\u00bf\u00c0\7g\2\2\u00c0\u00c1\7z\2\2\u00c1\u00c2")
        buf.write("\7g\2\2\u00c2\u00c3\7e\2\2\u00c3\66\3\2\2\2\u00c4\u00c5")
        buf.write("\7v\2\2\u00c5\u00c6\7t\2\2\u00c6\u00c7\7w\2\2\u00c7\u00c8")
        buf.write("\7g\2\2\u00c88\3\2\2\2\u00c9\u00ca\7h\2\2\u00ca\u00cb")
        buf.write("\7c\2\2\u00cb\u00cc\7n\2\2\u00cc\u00cd\7u\2\2\u00cd\u00ce")
        buf.write("\7g\2\2\u00ce:\3\2\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1")
        buf.write("\7w\2\2\u00d1\u00d2\7n\2\2\u00d2\u00d3\7n\2\2\u00d3<\3")
        buf.write("\2\2\2\u00d4\u00d5\7X\2\2\u00d5\u00d6\7q\2\2\u00d6\u00d7")
        buf.write("\7k\2\2\u00d7\u00d8\7f\2\2\u00d8>\3\2\2\2\u00d9\u00da")
        buf.write("\7x\2\2\u00da\u00db\7c\2\2\u00db\u00dc\7t\2\2\u00dc@\3")
        buf.write("\2\2\2\u00dd\u00de\7K\2\2\u00de\u00df\7p\2\2\u00df\u00e0")
        buf.write("\7v\2\2\u00e0\u00e1\7g\2\2\u00e1\u00e2\7i\2\2\u00e2\u00e3")
        buf.write("\7g\2\2\u00e3\u00e4\7t\2\2\u00e4B\3\2\2\2\u00e5\u00e6")
        buf.write("\7U\2\2\u00e6\u00e7\7v\2\2\u00e7\u00e8\7t\2\2\u00e8\u00e9")
        buf.write("\7k\2\2\u00e9\u00ea\7p\2\2\u00ea\u00eb\7i\2\2\u00ebD\3")
        buf.write("\2\2\2\u00ec\u00ed\7H\2\2\u00ed\u00ee\7w\2\2\u00ee\u00ef")
        buf.write("\7p\2\2\u00ef\u00f0\7e\2\2\u00f0\u00f1\7v\2\2\u00f1\u00f2")
        buf.write("\7k\2\2\u00f2\u00f3\7q\2\2\u00f3\u00f4\7p\2\2\u00f4F\3")
        buf.write("\2\2\2\u00f5\u00f6\7?\2\2\u00f6\u00f7\7@\2\2\u00f7H\3")
        buf.write("\2\2\2\u00f8\u00f9\7Q\2\2\u00f9\u00fa\7d\2\2\u00fa\u00fb")
        buf.write("\7l\2\2\u00fb\u00fc\7g\2\2\u00fc\u00fd\7e\2\2\u00fd\u00fe")
        buf.write("\7v\2\2\u00feJ\3\2\2\2\u00ff\u0100\7N\2\2\u0100\u0101")
        buf.write("\7k\2\2\u0101\u0102\7u\2\2\u0102\u0103\7v\2\2\u0103L\3")
        buf.write("\2\2\2\u0104\u0105\7V\2\2\u0105\u0106\7w\2\2\u0106\u0107")
        buf.write("\7r\2\2\u0107\u0108\7n\2\2\u0108\u0109\7g\2\2\u0109N\3")
        buf.write("\2\2\2\u010a\u010b\7C\2\2\u010b\u010c\7p\2\2\u010c\u010d")
        buf.write("\7{\2\2\u010dP\3\2\2\2\u010e\u010f\7e\2\2\u010f\u0110")
        buf.write("\7q\2\2\u0110\u0111\7p\2\2\u0111\u0112\7u\2\2\u0112\u0113")
        buf.write("\7v\2\2\u0113R\3\2\2\2\u0114\u0115\7y\2\2\u0115\u0116")
        buf.write("\7j\2\2\u0116\u0117\7k\2\2\u0117\u0118\7n\2\2\u0118\u0119")
        buf.write("\7g\2\2\u0119T\3\2\2\2\u011a\u011b\7k\2\2\u011b\u011c")
        buf.write("\7h\2\2\u011cV\3\2\2\2\u011d\u011e\7g\2\2\u011e\u011f")
        buf.write("\7n\2\2\u011f\u0120\7u\2\2\u0120\u0121\7g\2\2\u0121X\3")
        buf.write("\2\2\2\u0122\u0123\7h\2\2\u0123\u0124\7w\2\2\u0124\u0125")
        buf.write("\7p\2\2\u0125\u0126\7e\2\2\u0126\u0127\7v\2\2\u0127\u0128")
        buf.write("\7k\2\2\u0128\u0129\7q\2\2\u0129\u012a\7p\2\2\u012aZ\3")
        buf.write("\2\2\2\u012b\u012c\7p\2\2\u012c\u012d\7q\2\2\u012d\u012e")
        buf.write("\7v\2\2\u012e\u012f\7j\2\2\u012f\u0130\7t\2\2\u0130\u0131")
        buf.write("\7q\2\2\u0131\u0132\7y\2\2\u0132\\\3\2\2\2\u0133\u0134")
        buf.write("\7v\2\2\u0134\u0135\7j\2\2\u0135\u0136\7t\2\2\u0136\u0137")
        buf.write("\7q\2\2\u0137\u0138\7y\2\2\u0138\u0139\7u\2\2\u0139^\3")
        buf.write("\2\2\2\u013a\u013b\7p\2\2\u013b\u013c\7q\2\2\u013c\u013d")
        buf.write("\7g\2\2\u013d\u013e\7z\2\2\u013e\u013f\7k\2\2\u013f\u0140")
        buf.write("\7v\2\2\u0140`\3\2\2\2\u0141\u0142\7t\2\2\u0142\u0143")
        buf.write("\7g\2\2\u0143\u0144\7v\2\2\u0144\u0145\7w\2\2\u0145\u0146")
        buf.write("\7t\2\2\u0146\u0147\7p\2\2\u0147b\3\2\2\2\u0148\u0149")
        buf.write("\7g\2\2\u0149\u014a\7z\2\2\u014a\u014b\7k\2\2\u014b\u014c")
        buf.write("\7v\2\2\u014cd\3\2\2\2\u014d\u0151\t\2\2\2\u014e\u0150")
        buf.write("\t\3\2\2\u014f\u014e\3\2\2\2\u0150\u0153\3\2\2\2\u0151")
        buf.write("\u014f\3\2\2\2\u0151\u0152\3\2\2\2\u0152f\3\2\2\2\u0153")
        buf.write("\u0151\3\2\2\2\u0154\u0159\7$\2\2\u0155\u0158\5i\65\2")
        buf.write("\u0156\u0158\5o8\2\u0157\u0155\3\2\2\2\u0157\u0156\3\2")
        buf.write("\2\2\u0158\u015b\3\2\2\2\u0159\u0157\3\2\2\2\u0159\u015a")
        buf.write("\3\2\2\2\u015a\u015c\3\2\2\2\u015b\u0159\3\2\2\2\u015c")
        buf.write("\u015d\7$\2\2\u015dh\3\2\2\2\u015e\u0161\7^\2\2\u015f")
        buf.write("\u0162\t\4\2\2\u0160\u0162\5k\66\2\u0161\u015f\3\2\2\2")
        buf.write("\u0161\u0160\3\2\2\2\u0162j\3\2\2\2\u0163\u0164\7w\2\2")
        buf.write("\u0164\u0165\5m\67\2\u0165\u0166\5m\67\2\u0166\u0167\5")
        buf.write("m\67\2\u0167\u0168\5m\67\2\u0168l\3\2\2\2\u0169\u016a")
        buf.write("\t\5\2\2\u016an\3\2\2\2\u016b\u016c\n\6\2\2\u016cp\3\2")
        buf.write("\2\2\u016d\u0174\5s:\2\u016e\u0170\7\60\2\2\u016f\u0171")
        buf.write("\t\7\2\2\u0170\u016f\3\2\2\2\u0171\u0172\3\2\2\2\u0172")
        buf.write("\u0170\3\2\2\2\u0172\u0173\3\2\2\2\u0173\u0175\3\2\2\2")
        buf.write("\u0174\u016e\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0177\3")
        buf.write("\2\2\2\u0176\u0178\5u;\2\u0177\u0176\3\2\2\2\u0177\u0178")
        buf.write("\3\2\2\2\u0178r\3\2\2\2\u0179\u0182\7\62\2\2\u017a\u017e")
        buf.write("\t\b\2\2\u017b\u017d\t\7\2\2\u017c\u017b\3\2\2\2\u017d")
        buf.write("\u0180\3\2\2\2\u017e\u017c\3\2\2\2\u017e\u017f\3\2\2\2")
        buf.write("\u017f\u0182\3\2\2\2\u0180\u017e\3\2\2\2\u0181\u0179\3")
        buf.write("\2\2\2\u0181\u017a\3\2\2\2\u0182t\3\2\2\2\u0183\u0185")
        buf.write("\t\t\2\2\u0184\u0186\t\n\2\2\u0185\u0184\3\2\2\2\u0185")
        buf.write("\u0186\3\2\2\2\u0186\u0187\3\2\2\2\u0187\u0188\5s:\2\u0188")
        buf.write("v\3\2\2\2\u0189\u018b\t\13\2\2\u018a\u0189\3\2\2\2\u018b")
        buf.write("\u018c\3\2\2\2\u018c\u018a\3\2\2\2\u018c\u018d\3\2\2\2")
        buf.write("\u018d\u018e\3\2\2\2\u018e\u018f\b<\2\2\u018fx\3\2\2\2")
        buf.write("\16\2\u0151\u0157\u0159\u0161\u0172\u0174\u0177\u017e")
        buf.write("\u0181\u0185\u018c\3\2\3\2")
        return buf.getvalue()


class langLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    SYMBOL = 50
    STRING = 51
    NUMBER = 52
    WS = 53

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "';'", "'static'", "'typedef'", "'import'", "'='", "'{'", 
            "'}'", "':'", "'['", "']'", "'.'", "'('", "')'", "'+'", "'-'", 
            "'*'", "'/'", "'%'", "'>='", "'<='", "'>'", "'<'", "'=='", "'!='", 
            "'exec'", "'true'", "'false'", "'null'", "'Void'", "'var'", 
            "'Integer'", "'String'", "'Function'", "'=>'", "'Object'", "'List'", 
            "'Tuple'", "'Any'", "'const'", "'while'", "'if'", "'else'", 
            "'function'", "'nothrow'", "'throws'", "'noexit'", "'return'", 
            "'exit'" ]

    symbolicNames = [ "<INVALID>",
            "SYMBOL", "STRING", "NUMBER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "SYMBOL", 
                  "STRING", "ESC", "UNICODE", "HEX", "SAFECODEPOINT", "NUMBER", 
                  "INT", "EXP", "WS" ]

    grammarFileName = "lang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


